name: Generate APK

env:
  main_project_module: app
  target_owner: ${{ github.repository_owner }}
  target_repo: ${{ github.repository }}
  target_path: ${{ github.workspace }}
  BUILD_TIMESTAMP: "2025-05-24 11:38:37"
  BUILD_USER: "kanaminusaena"
  KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
  KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
  KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}

# Trigger events
on:
  # Trigger on push to specific branches
  push:
    branches:
      - main
      - master
      - develop
      - 'feature/**'
      - 'release/**'
    # Trigger on version tags
    tags:
      - 'v*.*.*'
  
  # Trigger on pull requests to specific branches
  pull_request:
    branches:
      - main
      - master
      - develop
      - 'release/**'
    types:
      - opened
      - synchronize
      - reopened
  
  # Allow manual trigger
  workflow_dispatch:
    inputs:
      build_type:
        description: 'Build Type (debug/release)'
        required: true
        default: 'debug'
        type: choice
        options:
          - debug
          - release

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for tags and branches

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '24'
          cache: 'gradle'

      - name: Create local.properties
        run: |
          echo "sdk.dir=$ANDROID_HOME" > local.properties
          echo "BUILD_TIMESTAMP=${{ env.BUILD_TIMESTAMP }}" >> local.properties
          echo "BUILD_USER=${{ env.BUILD_USER }}" >> local.properties

      - name: Setup Keystore
        if: github.event_name == 'push' && (startsWith(github.ref, 'refs/tags/') || github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
        env:
          KEYSTORE_BASE64: ${{ secrets.STORE }}
        run: |
          if [ ! -z "$KEYSTORE_BASE64" ]; then
            echo "$KEYSTORE_BASE64" | base64 -d > app/rocx.jks
            echo "Keystore decoded successfully"
          else
            echo "No keystore provided, will use debug signing"
          fi

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # Always build debug APK
      - name: Build Debug APK
        run: ./gradlew assembleFossDebug assembleFullDebug --stacktrace

      # Build release APK only on tags or main/master branch
      - name: Build Release APK
        if: github.event_name == 'push' && (startsWith(github.ref, 'refs/tags/') || github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
        run: ./gradlew assembleFossRelease assembleFullRelease --stacktrace

      # Clean up sensitive files
      - name: Cleanup sensitive files
        if: always()
        run: rm -f app/rocx.jks

      # Upload debug APKs
      - name: Upload Debug APKs
        uses: actions/upload-artifact@v4
        with:
          name: debug-apks-${{ env.BUILD_TIMESTAMP }}
          path: |
            app/build/outputs/apk/foss/debug/*.apk
            app/build/outputs/apk/full/debug/*.apk
          retention-days: 5

      # Upload release APKs
      - name: Upload Release APKs
        if: github.event_name == 'push' && (startsWith(github.ref, 'refs/tags/') || github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
        uses: actions/upload-artifact@v4
        with:
          name: release-apks-${{ env.BUILD_TIMESTAMP }}
          path: |
            app/build/outputs/apk/foss/release/*.apk
            app/build/outputs/apk/full/release/*.apk
          retention-days: 5

      # Create GitHub Release for tags
      - name: Create Release
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.TOKEN }}
          name: ${{ github.ref_name }}
          draft: false
          prerelease: false
          files: |
            app/build/outputs/apk/foss/release/*.apk
            app/build/outputs/apk/full/release/*.apk
            app/build/outputs/apk/foss/debug/*.apk
            app/build/outputs/apk/full/debug/*.apk
          body: |
            Release ${{ github.ref_name }}
            
            Build Information:
            - Timestamp: ${{ env.BUILD_TIMESTAMP }}
            - Builder: ${{ env.BUILD_USER }}
            
            ### APK Files:
            - FOSS Release
            - Full Release
            - FOSS Debug
            - Full Debug

      # Notify on failure
      - name: Notify on failure
        if: failure()
        run: |
          echo "Build failed!"
          echo "Timestamp: ${{ env.BUILD_TIMESTAMP }}"
          echo "Builder: ${{ env.BUILD_USER }}"
          echo "Event: ${{ github.event_name }}"
          echo "Ref: ${{ github.ref }}"

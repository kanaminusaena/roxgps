name: Generate APK

env:
  main_project_module: app
  target_owner: ${{ github.repository_owner }}
  target_repo: ${{ github.repository }}
  target_path: ${{ github.workspace }}

on:
  push:
    branches:
      - 'release/**'
      - 'develop'
    tags:
      - 'v*.*.*'
  pull_request:
    branches:
      - 'develop'
      - 'release/**'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Extract version from build.gradle (tagName)
        id: version
        run: |
          TAG_NAME=$(grep -m 1 "def tagName" ${{ env.main_project_module }}/build.gradle | sed "s/def tagName *= *['\"]\([0-9.]*\)['\"]/\1/")
          if [ -z "$TAG_NAME" ]; then
            echo "GAGAL mendapatkan tagName dari build.gradle"
            exit 1
          fi
          echo "version=$TAG_NAME" >> $GITHUB_ENV
          echo "VERSION=$TAG_NAME"

      - name: Set ENV
        run: |
          echo "date_today=$(date +'%Y-%m-%d')" >> $GITHUB_ENV
          echo "repository_name=$(echo '${{ github.repository }}' | awk -F '/' '{print $2}')" >> $GITHUB_ENV

      - name: Use JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'
          cache: 'gradle'

      - name: Lint (error only, full stacktrace)
        run: ./gradlew lint --full-stacktrace --quiet 2>lint-error.log

      - name: Print lint error log if failed
        if: failure()
        run: cat lint-error.log

      - name: Upload lint error log (artifact)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: lint-error-log
          path: lint-error.log

      - name: Compile Debug (error only, full stacktrace)
        run: ./gradlew compileDebug --full-stacktrace --quiet 2>compile-error.log

      - name: Print compile error log if failed
        if: failure()
        run: cat compile-error.log

      - name: Upload compile error log (artifact)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: compile-error-log
          path: compile-error.log

      - name: Build APK (error only, full stacktrace)
        shell: bash
        env:
          FS_KEYSTORE_FILE: ${{ secrets.STORE }}
          FS_KEY_PROPERTIES_FILE: ${{ secrets.LOCAL }}
        run: |
          mkdir secrets-base64
          echo "$FS_KEY_PROPERTIES_FILE" > secrets-base64/key.properties.base64
          echo "$FS_KEYSTORE_FILE" > secrets-base64/upload-keystore.jks.base64
          base64 --decode secrets-base64/upload-keystore.jks.base64 > ${{ env.target_path }}/app/upload.jks
          base64 --decode secrets-base64/key.properties.base64 > ${{ env.target_path }}/local.properties
          chmod +x ./gradlew
          ./gradlew assembleRelease --full-stacktrace --quiet 2>build-error.log
          rm ${{ env.target_path }}/app/upload.jks ${{ env.target_path }}/local.properties

      - name: Print Gradle build error log if failed
        if: failure()
        run: cat build-error.log

      - name: Upload build error log (artifact)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: build-error-log
          path: build-error.log

      - name: Upload APKs (as artifacts)
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.repository_name }}-${{ env.date_today }}
          path: |
            ${{ env.main_project_module }}/build/outputs/apk/foss/release/*.apk
            ${{ env.main_project_module }}/build/outputs/apk/full/release/*.apk

      - name: Publish (GitHub Release)
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          name: v${{ env.version }}
          tag_name: v${{ env.version }}
          files: |
            ${{ env.main_project_module }}/build/outputs/apk/foss/release/app-foss-arm64-v8a-release.apk
            ${{ env.main_project_module }}/build/outputs/apk/full/release/app-full-arm64-v8a-release.apk